document.getElementById('one').innerHTML = 'hi world';
document.write = 'Hello JS';
alert('hello');
confirm('hello');
console.log('hello');

/* JS 코드 구조
 1. 문(statement)은 세미콜론으로 구분(세미콜론을 붙이지 않는 경우도 존재)
 2. 문은 값, 연산자, 키워드, 명령어, 표현식
 (값으로 평가, 함수나 key, index를 통한 값의 호출도 표현식) 등으로 구성
 3. 공백 병합
 */

let x = 10,
  y = 20,
  z = 30;

console.log(x, y, z);

// 주석
// 1. 한 줄 주석
/*
2. 여러줄
주석
*/

/** 엄격 모드
 * ES5에서 최신의 문법들이 많이 추가되었는데 기존에 있던 문법을 변경하는 문법도 나옴
 * 이러한 문법들은 기존 코드의 문제를 불러일으킬 수 있기 때문에 use strcit라는 지시자를 통해
 * 엄격모드를 활성화 했을 때에만 반영
 * class 문법의 경우 엄격 모드가 기본
 * 함수별로 엄격 모드를 다르게 적용할 수 있으나 혼란을 야기할 수 있음
 */

/** 변수
 * - 변수 이름 규칙
 * 1. 변수는 숫자로 시작 불가
 * 2. 띄어쓰기 불가
 * 3. 예약어 사용할 수 없음 (사용 불가한 것은 아님)
 * 4. $, _를 제외한 특수문자를 사용하지 않는다.
 * 5. 대소문자를 구분한다.
 * 6. class는 첫 문자를 대문자로, 나머지는 보통 소문자로 시작
 */
/** var, let, const
 * var = ES5 이전 버전에서 사용, ES6부터는 사용 권장 X
         함수 레벨 스코프, 재선언시 에러 X
 * let = 블록 레벨 스코프, 재선언시 에러 발생, 콘솔에서는 에러 X, 변경가능한 자료형
 * const = 블록 레벨 스코프, 재선언시 에러 발생, 콘솔에서는 에러 X, 변경 불가능한 자료형(상수)
 */

var x1 = 10;
var y1 = 20;

console.log(x1 + x2);

let x2 = 10;
let y2 = 20;
console.log(x2 + y2);
